<style lang="less">
  .title-view {
    margin-left: 15px;
    margin-right: 15px;
    padding-top: 30px;
    padding-bottom: 11px;
    border-bottom: 0.5px solid rgba(0,0,0,0.10);
  }

  .line-view {
    border-bottom: 0.5px solid rgba(0,0,0,0.10);
    width: 100%;
  }

  .tag-list {
    display: flex;
    flex-wrap: wrap;
    margin-top: -2px;
    margin-left: -9px;
    padding-bottom: 22px;
  }

  .tag-noselect-item {
    background-color: #F3F5F8;
    border-radius: 100px;
    display: flex;
    flex-direction: row;
    padding-top: 6.5px;
    padding-bottom: 5.5px;
    padding-left: 16px;
    padding-right: 16px;
    margin-left: 9px;
    margin-top: 12px;
    color: #444B53;
  }

  .tag-select-item {
    background-color: #FFFCF8;
    border: 0.5px solid #FF7733;
    border-radius: 100px;
    display: flex;
    flex-direction: row;
    padding-top: 6px;
    padding-bottom: 5px;
    padding-left: 15.5px;
    padding-right: 15.5px;
    margin-left: 9px;
    margin-top: 12px;
    color: #FF7733;
  }

  .tag-item-text {
    font-size: 14px;
  }

  .paragraph-list {
    padding-left: 15px;
    padding-right: 15px;
    padding-top: 12px;
  }

  .editor-button-style {
    font-size: 16px;
    color: #65ABFC;
    margin-left: 14px
  }

  .add-content-button {
    display: flex;
    align-items: center;
    flex-direction: column;
    padding-left: 15px;
    padding-right: 15px;
  }

  .content-tip-view {
    padding-left: 15px;
    padding-right: 15px;
    margin-top: 145px;
  }

  .content-tip-title-style {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .content-tip-line-view {
    width: 6px;
    height: 6px;
    border-radius: 100px;
    background-color: #FFC739
  }

  .content-tip-title-text {
    font-size: 18px;
    color: #333333;
    margin-left: 8px;
    font-weight: bold
  }

  .content-tip-detail {
    font-size: 14px;
    color: #666666;
  }

  .add-button-mask {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
  }

  .add-button-view {
    position: absolute;
    left: 0px;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: center;
  }

  .add-button-back-view {
    border: 1px solid #EDF0F5;
    box-shadow: 0 6px 17px 0 rgba(0,0,0,0.12);
    border-radius: 6px;
    background-color: #FFFFFF;
    width: 150px;
    padding-top: 4px;
    padding-bottom: 4px;
  }

  .add-button-item-view {
    padding-top: 7px;
    padding-bottom: 7px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .add-button-item-text {
    font-size: 15px;
    color: #333333;
  }

  .section-view {
    margin-left: 15px;
    margin-right: 15px;
    margin-top: 9px;
  }

  .content-delete-view {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    padding-bottom: 12px;
    margin-top: 2px;
  }

  .content-text-view {
    margin-top: 5px;
  }

  .content-text-text {
    color: #4A4C5B;
    font-size: 15px;
    line-height: 20px;
  }

  .content-nodata-view {
    padding: 67px 0px 0px 0px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin-left: 15px;
    margin-right: 15px;
  }

  .content-nodata-add-view {
    display: flex;
    justify-content: center;
    flex-direction: row;
  }

  .content-nodata-add-item-view {
    display: flex;
    flex: 1;
    align-items: center;
    flex-direction: column;
  }

  .content-nodata-add-item-text {
    font-size: 16px;
    color: #666666;
    margin-top: 9px
  }

  .content-title-view {
    width: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .content-title-text {
    font-size: 18px;
    color: #333333;
  }

  .editor-poi-list {
    padding-top: 9px;
    display: flex;
    padding-right: -9px;
    flex-wrap: wrap;
  }

  .editor-poi-button {
    background-color: #F2F4F7;
    border-radius: 100px;
    padding-top: 7.5px;
    padding-bottom: 7.5px;
    padding-right: 16px;
    padding-left: 15px;
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-right: 9px;
    margin-bottom: 9px;
  }

  .editor-poi-text {
    font-size: 14px;
    color: #333333;
  }

  .editor-delete-button {
    width: 12px;
    height: 12px;
    margin-left: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .sort-view {
    position: fixed;
    top: 10px;
    right: 0px;
    width: 74px;
    height: 38px;
    border-radius: 19px 0 0 19px;
    background-color: rgba(5, 27, 40, 0.6);
    display: flex;
    flex-direction: row;
    align-items: center;
  }
</style>

<template>
  <view style="background-color: white">
    <view hidden="{{checkEmptyContentList}}" class="line-view"/>
    <scroll-view style="padding-bottom: 50px;">
      <view class="title-view">
        <text style="font-size: 24px; color: #333333; font-weight: bold;">{{title}}</text>
        <text @tap="clickedTitleEditorButton" class="editor-button-style">编辑</text>
      </view>

      <!--无内容-->
      <view wx:if="{{checkEmptyContentList}}" class="content-nodata-view">
        <view class="content-nodata-add-view">
          <view
            @tap="clickedAddContentButton"
            class="content-nodata-add-item-view"
          >
            <image
              src="../../../images/tn-wx-editor-insert-text.png"
              style="width: 70px; height: 70px;"
            />
            <text class="content-nodata-add-item-text">添加文字</text>
          </view>
          <view style="border-left: 0.5px solid rgba(0,0,0,0.10);"/>
          <view
            @tap="clickedAddImageButton"
            class="content-nodata-add-item-view"
          >
            <image
              src="../../../images/tn-wx-editor-insert-image.png"
              style="width: 70px; height: 70px;"
            />
            <text class="content-nodata-add-item-text">插入照片</text>
          </view>
        </view>

        <view class="content-tip-view">
          <view class="content-tip-title-style">
            <view class="content-tip-line-view"/>
            <text class="content-tip-title-text">提示</text>
          </view>
          <view style="margin-top: 4px;">
            <text class="content-tip-detail">你可以任意添加一段文字、图片，添加完成后可以用“图文排序”功能完成文字和图片的排序</text>
          </view>
        </view>
      </view>

      <!--有内容-->
      <view wx:else>
        <repeat for="{{contents}}" key="index" index="index">
          <!--添加-->
          <view
            data-index="{{index}}"
            class="add-content-button"
          >
            <image
              data-index="{{index}}"
              @tap="clickedAddButton"
              src="../../../images/tn-wx-editor-data-add.png"
              style="width: 28px; height: 28px; margin-bottom: 21px; margin-top: 21px;"
            />
            <view class="line-view"/>
          </view>

          <!--文本-->
          <view
            wx:if="{{item.elementType === 0}}"
            class="paragraph-list"
          >
            <view data-id="{{index}}" @tap="clickedContentEditorButton">
              <view class="content-title-view">
                <text class="content-title-text">{{item.title}}</text>
              </view>
              <view class="content-text-view">
                <text class="content-text-text">{{item.content ? item.content : '暂无内容'}}</text>
              </view>
            </view>

            <view class="content-delete-view">
              <image
                data-index="{{index}}"
                @tap="clickedDeleteContentButton"
                src="../../../images/tn-wx-editor-paragraph-delete.png"
                style="width: 12px; height: 17px;"
              />
            </view>

            <view class="line-view"/>
          </view>

          <!--图片-->
          <view
            wx:if="{{item.elementType === 1}}"
            class="paragraph-list"
          >
            <contentimagesview
              :currentIndex="index"
              :imgs="item.imgs"
              :sepSize="getSpaceSepSize"
              @deleteImg.user="clickedDeleteContentImgButton"
            />
            <view class="content-delete-view">
              <image
                data-index="{{index}}"
                @tap="clickedDeleteContentButton"
                src="../../../images/tn-wx-editor-paragraph-delete.png"
                style="width: 12px; height: 17px;"
              />
            </view>
            <view class="line-view"/>
          </view>
        </repeat>

        <!--添加-->
        <view
          data-index="{{contents.length}}"
          class="add-content-button"
        >
          <image
            data-index="-1"
            @tap="clickedAddButton"
            src="../../../images/tn-wx-editor-data-add.png"
            style="width: 28px; height: 28px; margin-bottom: 21px; margin-top: 21px;"
          />
        </view>

        <view class="line-view"/>

        <!--目的地-->
        <view wx:if="{{sourceType === 'square'}}" class="section-view">
          <text style="font-size: 15px; color: #333333;">目的地<text style="font-size: 13px; color: #999999;">（请添加对应目的地）</text></text>
          <view class="editor-poi-list">
            <repeat for="{{selectPois}}" key="index" index="index">
              <view class="editor-poi-button">
                <image
                  src="../../../images/tn-wx-desination-item-location.png"
                  style="width: 11px; height: 12px; margin-right: 7px;"
                />
                <text class="editor-poi-text">{{item.poiName}}</text>
                <view @tap="clickedDeletePoiButton" data-info="{{item}}" class="editor-delete-button">
                  <image
                    src="../../../images/tn-wx-desination-item-delete.png"
                    style="width: 12px; height: 12px;"
                  />
                </view>
              </view>
            </repeat>
            <view @tap="clickedAddPoiButton" class="editor-poi-button">
              <image
                src="../../../images/tn-wx-desination-item-add.png"
                style="width: 12px; height: 12px; margin-right: 6px;"
              />
              <text class="editor-poi-text">添加城市/景点</text>
            </view>
          </view>
        </view>



        <!--板块-->
        <view class="section-view">
          <text style="font-size: 15px; color: #333333;">版块<text style="font-size: 13px; color: #999999;">（请选择对应版块，最多选3个）</text></text>
          <view class="tag-list">
            <repeat for="{{tabs}}" key="index" index="index">
              <view
                class="{{item.isSelect ? 'tag-select-item' : 'tag-noselect-item'}}"
                data-info="{{item}}"
                id="{{index}}"
                @tap="clickedCurrentTag"
              >
                <text class="tag-item-text">{{item.name}}</text>
              </view>
            </repeat>
          </view>
        </view>

        <!--同步-->
        <view style="background-color: #EDF0F5; padding-top: 14px; padding-bottom: 16px; padding-left: 15px; padding-right: 15px; display: flex; flex-direction: row; align-items: center;">
          <image
            @tap="clickedSyncSquare"
            src="{{selectedSync ? selectedIcon : noselectIcon}}"
            style="width: 16px; height: 16px; margin-right: 6px;"
          />
          <text style="font-size: 15px; color: #222222;">同步到广场</text>
        </view>
      </view>

      <view
        wx:if="{{addButtonOffsetY >= 0}}"
        @tap="clickedOtherView"
        class="add-button-mask"
      >
        <view
          class="add-button-view"
          style="top: {{addButtonOffsetY}}px;"
        >
          <view class="add-button-back-view">
            <view
              @tap="clickedAddContentButton"
              class="add-button-item-view">
              <text class="add-button-item-text">文字</text>
            </view>
            <view class="line-view"/>
            <view
              @tap="clickedAddImageButton"
              class="add-button-item-view">
              <text class="add-button-item-text">图片</text>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>

    <view wx:if="{{!checkEmptyContentList}}" @tap="clickedSortButton" class="sort-view">
      <image
        src="../../../images/tn-wx-editor-sort.png"
        style="margin-left: 16px;width: 15px; height: 14px;"
      />
      <text style="margin-left:4px; font-size: 15px; color: #FFFFFF;">排序</text>
    </view>

    <completebutton
      :title="getCompleteText"
      @completeEvent.user="clickedReleaseButton"
    />
  </view>
</template>


<script>
  import wepy from 'wepy'
  import CompleteButton from '../../../components/complete-button'
  import ContentImagesView from '../../../components/content-images-view'
  import { getStore } from 'wepy-redux'
  import { CHANGE_PARAGRAGH_DATA, CHANGE_CONTENT_POI_LIST, CHANGE_CONTENT_TAG_LIST, EDITOR_CONTENT_CLEAR } from '../../../store/types/editor'

  import test from '../../../utils/test'
  import utils from '../../../utils/utils'

  export default class Index extends wepy.page {
    config = {
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTextStyle: 'black',
      navigationBarTitleText: '发布旅行心得'
    }

    components = {
      completebutton: CompleteButton,
      contentimagesview: ContentImagesView
    }

    data = {
      sourceType: '',
      title: '',
      noData: false,
      addButtonOffsetY: -1,
      currentAddIndex: -1,
      tabs: [],
      contents: [],
      selectTags: [],
      selectedSync: false,
      selectedIcon: '../../../images/tn-wx-editor-select-true.png',
      noselectIcon: '../../../images/tn-wx-editor-select-false.png',

      selectPois: [],

      store: getStore()
    }

    computed = {
      getScreenHeight() {
        return this.$parent.globalData.screenHeight
      },
      getCompleteText() {
        return '发布心得'
      },
      checkEmptyContentList() {
        return !(this.contents.length > 0)
      },
      getSpaceSepSize() {
        return (this.$parent.globalData.screenWidth - 30 - 100 * 3) / 2
      }
    }

    methods = {
      clickedReleaseButton() {
        this.addButtonOffsetY = -1
        if (this.selectTags.length <= 0) {
          wx.showToast({
            title: '板块不能为空～',
            icon: 'none',
            duration: 2000
          })
          return
        }
      },
      clickedTitleEditorButton() {
        this.$navigate('../title-editor/index', {isEditor: true, title: this.title})
      },
      clickedContentEditorButton(value) {
        let index = parseInt(value.currentTarget.dataset.id)
        let dataStr = JSON.stringify(this.contents[index])
        this.$navigate('../paragraph-editor/index', {isEditor: true, index: index, element: dataStr})
      },
      clickedAddButton(num) {
        this.addButtonOffsetY = num.currentTarget.offsetTop + 35
        this.currentAddIndex = num.currentTarget.dataset.index
      },
      clickedOtherView() {
        this.addButtonOffsetY = -1
      },
      clickedAddContentButton() {
        let index = parseInt(this.currentAddIndex) === -1 ? this.contents.length : this.currentAddIndex
        this.$navigate('../paragraph-editor/index', {isEditor: false, index: index})
      },
      clickedAddImageButton(num) {
        let self = this
        wx.chooseImage({
          count: 9, // 默认9
          sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: function (res) {
            // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            let images = res.tempFilePaths

            // 上传图片

            // 添加到数组
            let contentInfo = {
              elementType: 1,
              imgs: images,
              elementId: parseInt(self.currentAddIndex) === -1 ? self.contents.length : self.currentAddIndex
            }

            self.store.dispatch({ type: CHANGE_PARAGRAGH_DATA, element: contentInfo })

            self.$apply()
          }
        })
      },
      clickedCurrentTag(value, evt) {
        let info = utils.getSelectTagsInfo(this.tabs, this.selectTags, parseInt(value.currentTarget.id), 3)
        this.tabs = info.tabs
        this.selectTags = info.selectTags
        this.store.dispatch({type: CHANGE_CONTENT_TAG_LIST, tagList: this.selectTags})
      },
      clickedSyncSquare() {
        this.selectedSync = !this.selectedSync
      },
      clickedDeleteContentButton(num) {
        let index = num.currentTarget.dataset.index
        let self = this
        wx.showModal({
          title: '提示',
          content: '确定要删除吗？',
          success: function(res) {
            if (res.confirm) {
              self.contents.splice(index, 1)
              self.$apply()
            } else if (res.cancel) {

            }
          }
        })
      },
      clickedDeletePoiButton() {
        let clickedItem = value.currentTarget.dataset.info
        this.selectPois = utils.deleteCityFromArray(this.selectPois, clickedItem, (old, news) => old.poiName === news.poiName)
        this.store.dispatch({type: CHANGE_CONTENT_POI_LIST, poiList: this.selectPois})
      },
      clickedAddPoiButton() {
        this.$navigate('../../space/add-destination/index', {})
      },
      clickedDeleteContentImgButton(num) {
        let currentItem = this.contents[num.currentIndex]
        let self = this
        wx.showModal({
          title: '提示',
          content: '确定要删除吗？',
          success: function(res) {
            if (res.confirm) {
              if (currentItem.elementType === 1) {
                currentItem.imgs.splice(num.imgIndex, 1)
                self.contents[num.imgIndex] = currentItem
              }

              if (currentItem.imgs.length <= 0) {
                self.contents.splice(num.currentIndex, 1)
              }

              self.$apply()
            } else if (res.cancel) {

            }
          }
        })
      },
      clickedSortButton() {
        this.$navigate('../sort-editor/index', {})
      }
    }

    onLoad(options) {
      this.title = options.title
      this.tabs = test.testTabData
      this.sourceType = options.type
      this.selectedSync = (this.sourceType === 'space')
    }

    onShow() {
      const store = getStore()
      const state = store.getState()
      this.title = state.editor.title
      this.contents = state.editor.contents
      this.selectTags = state.editor.tagList

      let self = this
      wx.getStorage({
        key: utils.cityStorageKey,
        success: function(res) {
          let callback = (old, news) => old.poiName === news.poiName
          self.selectPois = utils.reContructSelectCitys(self.selectPois, res.data, callback)
          self.store.dispatch({type: CHANGE_CONTENT_POI_LIST, poiList: this.selectPois})

          self.$apply()
        },
        complete: function () {
          wx.removeStorage({
            key: utils.cityStorageKey,
            success: function(res) {
            }
          })
        }
      })
    }

    onUnload() {
      this.store.dispatch({type: EDITOR_CONTENT_CLEAR})
    }
  }
</script>

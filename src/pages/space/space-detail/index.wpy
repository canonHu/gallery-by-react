<style lang="less">
  page {
    background-color: #EDF0F5;
    height: 100%;
  }

  .header-view {
    display: -webkit-box;
    background:-webkit-gradient(linear, left bottom, left top, from(#000000), to(rgba(0,0,0,0.06)));
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 87px;
    padding-top: 37px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .content-view {
    margin-left: 15px;
    display: flex;
    flex-direction: row;
  }

  .avatar-view {
    position: relative;
    background-color: transparent;
    width: 76px;
    height: 76px;
  }

  .content-style {
    padding-top: 3px;
    display: flex;
    flex-direction: column;
  }

  .editor-button {
    position: absolute;
    bottom: -6px;
    right: -1px;
    border-radius: 100px;
    width: 24px;
    height: 24px;
  }

  .space-title {
    margin-left: 5px;
    font-size: 20px;
    color: #ffffff;
    font-weight: bold;
  }

  .space-authority {
    font-size: 14px;
    color: #ffffff;
    font-weight: normal;
  }

  .space-user {
    color: #ffffff;
    margin-left: 7.5px;
    font-size: 13px;
  }

  .space-pv-tip {
    margin-left: 8px;
    color: #ffffff;
    font-size: 13px;
  }

  .space-pv-count {
    font-size: 14px;
    color: #F0C401;
  }

  .center {
    display:flex;
    align-items:center;
  }

  .search-back-view {
    margin-bottom: 11px;
    flex-direction: row;
    display: flex;
    align-items: center;
  }

  .search-button {
    background-color: rgba(133, 124, 124, 0.5);
    border-bottom-left-radius: 100px;
    border-top-left-radius: 100px;
    display: flex;
    flex-direction: row;
    align-items: center;
    padding-left: 16px;
    padding-right: 7px;
    padding-bottom: 9px;
    padding-top: 9px;
  }

  .search-text {
    margin-left: 4.5px;
    margin-bottom: 1px;
    color: #ffffff;
    font-size: 13px;
  }

  .tab-list {
    background-color: white;
    padding-left: 11px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    border-bottom: 0.5px solid rgba(0,0,0,0.10);
  }

  .tab-select {
    width: 40px;
    height: 42px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .sort-view {
    display: flex;
    flex-direction: row;
    height: 42px;
    justify-content: space-between;
    align-items: center;
    padding-left: 15px;
    padding-right: 15px;
  }

  .sort-button {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .count-text {
    font-size: 14px;
    color: #777777;
  }

  .result-list {
    display: flex;
    flex-direction: column;
  }

  .alert-back {
    position: relative;
    width: 100%;
    height: 100%;
    background-color: transparent;
  }

  .alert-mask {
    position: absolute;
    top: 0px;
    left: 0px;
    background-color: rgba(0,0,0,0.50);
    width: 100%;
    height: 100%;
  }

  .space-detail-empty-text {
    font-size: 14px;
    color: #666666;
  }

  .space-detail-empty-view {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 60px;
    padding-bottom: 200px;
    background-color: white;
  }
</style>

<template>
  <view>
    <view style="height: 124px;">
      <!--背景view-->
      <image
        mode="aspectFill"
        style="width: 100%; height: 124px; background-color: antiquewhite;"
      />
      <!--内容-->
      <view class="header-view">
        <view class="content-view">
          <view class="avatar-view">
            <image
              src="../../../images/test-rectangle.png"
              style="border-radius: 2px;box-shadow: 0 2px 4px 0 rgba(0,0,0,0.23);width: 76px; height: 76px;"
            />
            <view
              @tap="clickedEditorSpace"
              class="editor-button"
            >
              <image
                src="../../../images/tn-wx-space-detail-editor.png"
                style="width: 24px; height: 24px;"
              />
            </view>
          </view>
          <view class="content-style">
            <view class="center">
              <text class="space-title">日本七日游</text><text class="space-authority">(私密)</text>
            </view>
            <text class="space-user">郭麒麟</text>
            <text class="space-pv-tip">浏览量 <text class="space-pv-count">1817</text></text>
          </view>
        </view>

        <view class="search-back-view">
          <view
            class="search-button"
            @tap="clickedSearchButton"
          >
            <image
              src="../../../images/tn-wx-space-detail-search-button.png"
              style="width: 19px; height: 19px;"
            />
            <text class="search-text">搜索</text>
          </view>
        </view>

      </view>

    </view>

    <view class="tab-list">
      <view style="width: {{getTabViewWidth}}px;">
        <tablist
          :tabs.sync="tabs"
          :selectIndex.sync="selectIndex"
          :defaultTitleColor="defaultTitleColor"
          :defaultTitleBold="defaultTitleBold"
          :selectTitleColor="selectTitleColor"
          :selectTitleBold="selectTitleBold"
          :indicatorColor="indicatorColor"
          @tapEvent.user="clickCurrentTab"
        />
      </view>

      <image
        src="../../../images/tn-wx-space-detail-shadow.png"
        style="width: 14px; height: 42px;"
      />
      <view @tap="clickedShowTabListView" class="tab-select">
        <image
          src="../../../images/tn-wx-space-tab-more.png"
          style="width: 14px; height: 8px;"
        />
      </view>
    </view>

    <view style="position: relative;">

      <view wx:if="{{list.length > 1}}" class="sort-view">
        <view>
          <text class="count-text">共<text>{{list.length}}</text>条信息</text>
        </view>
        <view @tap="clickedSortButton" class="sort-button">
          <text style="font-size: 14px; color: #999999;">{{sortTypes[currentSort]}}</text>
          <image
            src="../../../images/tn-wx-space-detail-sort.png"
            style="margin-left: 5px;width: 15px; height: 13px;"
          />
        </view>
      </view>

      <!--有内容-->
      <scroll-view wx:if="{{list.length > 1}}">
        <repeat for="{{list}}" key="index" index="index">
          <spacedetailitem
            :index="index"
            :cellInfo="item"
            @tapEvent.user="clickedListItem"
            @tapMoreEvent.user="clickedListItemMoreButton"
          />
        </repeat>
      </scroll-view>

      <!--无内容-->
      <view wx:else class="space-detail-empty-view">
        <image
          src="../../../images/tn-wx-dynamic-empty.png"
          style="width: 251px; height: 162px;"
        />
        <text class="space-detail-empty-text">快来发布新内容</text>
      </view>

      <!--蒙层框-->
      <view
        wx:if="{{showAlert}}"
        @tap="clickedMaskBack"
        class="alert-mask"
      >
        <view class="alert-back">
          <alertlist
            :items.sync="currentAlertSource"
            :syncOffsetY.sync="showAlertOffset"
            :showSelectStyle.sync="currentAlertSelectStyle"
            :currentSelect.sync="currentSort"
            :totalCount.sync="currentAlertSourceCount"
            @clickedAlertItem.user="clickedAlertItem"
          />
        </view>
      </view>

      <!--tab栏-->
      <view
        wx:if="{{showTabview}}"
        @tap="clickedShowTabListView"
        class="alert-mask"
      >
        <tablistview
          :tabs.sync="tabs"
          :selectIndex.sync="selectIndex"
          :defaultBackColor="defaultBackColor_view"
          :defaultTitleColor="defaultTitleColor_view"
          :defaultTitleBold="defaultTitleBold_view"
          :defaultBorderColor="defaultBorderColor_view"
          :selectTitleColor="selectTitleColor_view"
          :selectTitleBold="selectTitleBold_view"
          :selectBorderColor="selectBorderColor_view"
          :selectBackColor="selectBackColor_view"
          @tapEvent.user="clickCurrentTab"
        />
      </view>
    </view>

    <image
      wx:if="{{showToTop}}"
      @tap="clickedTopButton"
      style="width: 53px; height: 55px; position: fixed; bottom: 142px; right: 8px;"
      src="../../../images/tn-wx-square-back-icon.png"
    />

    <image
      @tap="clickedPostButton"
      src="../../../images/tn-wx-square-post-icon.png"
      style="width: 65px; height: 65px; position: fixed; bottom: 77px; right: 2px;"
    />

  </view>
</template>

<script>
  import wepy from 'wepy'
  import { getStore } from 'wepy-redux'
  import { obtainUserInfo } from '../../../store/actions'

  import TabList from '../../../components/tab-list'
  import TabListView from '../../../components/tab-list-view'
  import SpaceDetailListItem from '../../../components/space-detail-list-item'
  import AlertList from '../../../components/alert-list'
  import test from '../../../utils/test'
  import utils from '../../../utils/utils'

  export default class Index extends wepy.page {
    config = {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTextStyle: 'black',
      navigationBarTitleText: '空间详情',
      enablePullDownRefresh: true,
      onReachBottomDistance: 100
    }

    components = {
      tablist: TabList,
      tablistview: TabListView,
      spacedetailitem: SpaceDetailListItem,
      alertlist: AlertList
    }

    data = {
      defaultTitleColor: '#666666',
      defaultTitleBold: 'normal',
      selectTitleColor: '#333333',
      selectTitleBold: 'bold',
      indicatorColor: '#ff7733',
      selectIndex: 0,
      selectItem: {},

      store: getStore(),
      userId: 0,
      spaceId: 0,

      showTabview: false,
      defaultBackColor_view: '#FFFFFF',
      defaultTitleColor_view: '#333333',
      defaultTitleBold_view: 'normal',
      defaultBorderColor_view: 'transparent',
      selectBackColor_view: '#FFFCF8',
      selectTitleColor_view: '#FF5500',
      selectTitleBold_view: 'bold',
      selectBorderColor_view: '#FF7733',

      showAlert: false,
      showAlertOffset: 0,

      currentAlertType: '',
      currentAlertSource: [],
      currentAlertSourceCount: 0,
      currentAlertSelectStyle: false,
      currentSelectIndex: -1,

      currentSort: 0,
      sortTypes: [
        '默认排序',
        '发布时间排序',
        '热度排序'
      ],
      itemTypes: [
        '分享',
        '更换板块',
        '移除空间'
      ],
      tabs: [],
      list: [],
      spaceInfo: {},

      showToTop: false
    }

    computed = {
      getTabViewWidth() {
        return this.$parent.globalData.screenWidth - 54
      }
    }

    methods = {
      clickedShowTabListView() {
        this.showTabview = !this.showTabview
      },
      clickCurrentTab(num, evt) {
        this.selectIndex = num.index
        this.selectItem = num.info
        this.changeTab(num.info.name)
      },
      clickedEditorSpace() {
        this.$navigate('../create-space/index', {isEditor: true})
      },
      clickedSearchButton() {
        this.$navigate('../../search/content-search/index?fromSquare=false', {})
      },
      clickedListItem(info) {
        // 心得详情
        if (!info || !info.item) {
          return
        }
        this.$navigate('../../article/article-detail/index?id=' + info.item.originId, {})
      },
      clickedListItemMoreButton(num, evt) {
        this.currentAlertType = 'itemMore'
        this.currentAlertSource = this.itemTypes
        this.currentAlertSelectStyle = false
        this.currentAlertSourceCount = this.itemTypes.length
        this.showAlert = true
        this.showAlertOffset = num.offsetTop

        this.currentSelectIndex = num.index
      },
      clickedMaskBack() {
        this.showAlert = false
        this.currentAlertType = ''
        this.currentAlertSource = []
        this.currentAlertSelectStyle = false
        this.currentAlertSourceCount = 0
        this.currentSelectIndex = -1
      },
      clickedSortButton(num, evt) {
        this.currentAlertType = 'sort'
        this.currentAlertSource = this.sortTypes
        this.currentAlertSelectStyle = true
        this.currentAlertSourceCount = this.sortTypes.length
        this.showAlert = true
        this.showAlertOffset = num.currentTarget.offsetTop + 24
      },
      clickedAlertItem(num, evt) {
        let index = num.index
        if (this.currentAlertType === 'sort') {
          this.currentSort = index
        } else {
          switch (index) {
            case 0: // 分享
              break
            case 1: // 移动板块
              let tempItem = this.list[this.currentSelectIndex]
              this.$navigate('../change-tab/index', {selectTags: JSON.stringify(tempItem.tagList), index: this.currentSelectIndex})
              break
            case 2: // 移除空间
              break
            default:
              break
          }
        }
      },
      clickedPostButton() {
        this.$navigate('../../pop/content-post/index', {type: 'space', selectPois: this.spaceInfo.poiList})
      },
      clickedTopButton() {
        wx.pageScrollTo({
          scrollTop: 0,
          duration: 300
        })
      }
    }

    onReachBottom() {
      if (this.list.length <= 0) {
        return
      }
      wx.showLoading({
        title: '加载中...',
      })

      setTimeout(function(){
        wx.hideLoading()
      },2000)
    }

    onPullDownRefresh() {
      // 下拉刷新

      setTimeout(() => {
        wx.stopPullDownRefresh()
      }, 3000)
    }

    onPageScroll(obj) {
      if (obj.scrollTop > this.$parent.globalData.screenHeight * 2) {
        if (!this.showToTop) {
          this.showToTop = true
          this.$apply()
        }
      } else {
        if (this.showToTop) {
          this.showToTop = false
          this.$apply()
        }
      }
    }

    onShow() {
      let self = this
      wx.getStorage({
        key: utils.spaceChangeTag,
        success: function(res) {
          wx.showToast({
            title: '版块更换成功～',
            icon: 'none',
            duration: 2000
          })
          let itemInfo = res.data
          let temp = self.list[itemInfo.index]
          temp.tagList = itemInfo.selectTags
          self.list[itemInfo.index] = temp
          self.$apply()
          wx.removeStorage({
            key: utils.spaceChangeTag,
            success: function(res) {
            }
          })
        }
      })
    }

    onLoad(opts) {
      if (opts && opts.spaceId) {
        this.spaceId = opts.spaceId
      }

      let self = this
      this.tabs = test.testTabData
      this.list = test.testSpaceListData
      this.list.forEach((item, index) => {
        item.pvStr = utils.getPVStr(item.pv)
        item.simpleContent = self.getShowContentText(item.elements)
        let tempImgs = self.getShowImgs(item.elements)
        item.simpleImgsCount = tempImgs.length
        item.simpleImgs = tempImgs.slice(0, 3)
      })
      this.$apply()


      wx.getSetting({
        success(res) {
          if (!res.authSetting['scope.userInfo']) {
            wx.authorize({
              scope: 'scope.userInfo',
              success() {
                self.store.dispatch(obtainUserInfo.apply()).then((e) => {
                  self.setUserId()
                })
              },
              fail() {
                wx.reLaunch({url: '../../error/authority-fail/index'})
              }
            })
          } else {
            self.store.dispatch(obtainUserInfo.apply()).then((e) => {
              self.setUserId()
            })
          }
        }
      })
    }

    setUserId() {
      const store = getStore()
      const state = store.getState()
      this.userId = state.request.userInfo.userId
    }

    getShowContentText(elements) {
      let contentText = ''

      if (elements !== undefined && elements.length > 0) {
        for (let i = 0; i < elements.length; i++) {
          let element = elements[i]
          if (element.elementType === 0 && element.content !== '') {
            contentText = element.content
            break
          }
        }
      }

      return contentText
    }

    getShowImgs(elements) {
      let imgs = []
      if (elements !== undefined && elements.length > 0) {
        for (let i = 0; i < elements.length; i++) {
          let element = elements[i]
          if (element.elementType === 1 && element.imgs !== undefined && element.imgs.length > 0) {
            imgs = imgs.concat(element.imgs)
          }
        }
      }

      return imgs
    }

    changeTab(tabName) {

    }

    /*引用广场回调*/
    quoteSpace(selectedList) {
      let data = {
        originId: selectedList,
        spaceId: [this.spaceId],
        userId: this.userId,
        type: 0
      }
      wx.request({
        url: `http://cmt-tgsp.api.tuniu-sst.org/tgsp/space/articleMove?${JSON.stringify(data)}`,
        success: function (res) {
          let response = res.data
          if(response.success && response.data && response.data.res) {
            wx.showToast({
              title: '引用成功',
              icon: 'none',
              duration: 2000
            })
          } else {
            wx.showToast({
              title: '引用失败',
              icon: 'none',
              duration: 2000
            })          }
        },
        fail: function (e) {
          console.log(e)
          wx.showToast({
            title: '引用失败',
            icon: 'none',
            duration: 2000
          })
        }
      })
    }
  }
</script>

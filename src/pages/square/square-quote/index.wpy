<style lang="less">
  page {
    background-color: #EDF0F5;
  }

  .top-button {
    position: fixed;
    bottom: 89px;
    right: 7px;
  }

  .complete-button {
    position: fixed;
    bottom: 0px;
    width: 100%;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #FF7733;
  }

  .complete-button-text {
    font-size: 18px;
    color: #FFFFFF;
  }

  .search-view {
    margin-right: 15px;
    margin-left: 15px;
    background-color: #EDF0F5;
    border-radius: 18px;
    height: 36px;
    flex-direction: row;
    display: flex;
    align-items: center;
  }

  .search-view .cityName {
    font-size: 14px;
    text-align: center;
    color: #333333;
    margin-left: 22px;
  }

  .search-view .arrow {
    width: 10px;
    height: 5.8px;
    margin-left: 5px;
  }

  .search-view .place-view {
    width: 2px;
    height: 18px;
    background-color: #CCCCCC;
    margin-left: 8.3px;
  }

  .search-view .search-img {
    width: 14px;
    height: 14px;
    margin-left: 13.7px;
  }

  .search-view .place-text {
    font-size: 14px;
    color: #979797;
    margin-left: 5px;
    display: flex;
    flex: 1
  }

  .tab-list {
    background-color: white;
    padding-left: 11px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    border-bottom: 0.5px solid rgba(0,0,0,0.10);
  }

  .tab-select {
    width: 40px;
    height: 42px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .alert-mask {
    position: absolute;
    top: 0px;
    left: 0px;
    background-color: rgba(0,0,0,0.50);
    width: 100%;
    height: 100%;
  }

  alert-back {
    position: relative;
    width: 100%;
    height: 100%;
    background-color: transparent;
  }

  .sort-view {
    display: flex;
    flex-direction: row;
    height: 42px;
    justify-content: space-between;
    align-items: center;
    padding-left: 15px;
    padding-right: 15px;
  }

  .sort-button {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .count-text {
    font-size: 14px;
    color: #777777;
  }
</style>

<template>
  <view>
    <view style="padding-top: 20px; background-color: #FFFFFF">
      <view class="search-view">
        <text class="cityName" @tap="jumpPoiSelect">{{cityName}}</text>
        <image src="../../../images/tn-wx-square-arrow-down.png"
               class="arrow" @tap="jumpPoiSelect"/>
        <view class="place-view"></view>
        <image src="../../../images/tn-wx-search-search.png"
               class="search-img"/>
        <text class="place-text" @tap="jumpContentSelect">目的地/关键词</text>
      </view>
    </view>
    <view class="tab-list">
      <view style="width: {{getTabViewWidth}}px;">
        <tablist
          :tabs.sync="tabs"
          :selectIndex.sync="selectIndex"
          :defaultTitleColor="defaultTitleColor"
          :defaultTitleBold="defaultTitleBold"
          :selectTitleColor="selectTitleColor"
          :selectTitleBold="selectTitleBold"
          :indicatorColor="indicatorColor"
          @tapEvent.user="clickCurrentTab"
        />
      </view>

      <image
        src="../../../images/tn-wx-space-detail-shadow.png"
        style="width: 14px; height: 42px;"
      />
      <view @tap="clickedShowTabListView" class="tab-select">
        <image
          src="../../../images/tn-wx-space-tab-more.png"
          style="width: 14px; height: 8px;"
        />
      </view>
    </view>
    <view wx:if="{{list.length > 1}}" style="position: relative;">
      <view class="sort-view">
        <view>
          <text class="count-text">共<text>{{list.length}}</text>条信息</text>
        </view>
        <view @tap="clickedSortButton" class="sort-button">
          <text style="font-size: 14px; color: #999999;">{{sortTypes[currentSort]}}</text>
          <image
            src="../../../images/tn-wx-space-detail-sort.png"
            style="margin-left: 5px;width: 15px; height: 13px;"
          />
        </view>
      </view>
      <scroll-view style="margin-bottom: 50px">
        <repeat for="{{list}}" key="index" index="index">
          <releaseitem :cancelFlag="cancelFlag"
                       :items="item"
                       :index="index"
                       :fromSquare="fromSquare"
                       @tapEvent.user="clickedListItem"
          />
        </repeat>
      </scroll-view>

      <!--蒙层框-->
      <view
        wx:if="{{showAlert}}"
        @tap="clickedMaskBack"
        class="alert-mask"
      >
        <view class="alert-back">
          <alertlist
            :items.sync="currentAlertSource"
            :syncOffsetY.sync="showAlertOffset"
            :showSelectStyle.sync="currentAlertSelectStyle"
            :currentSelect.sync="currentSort"
            :totalCount.sync="currentAlertSourceCount"
            @clickedAlertItem.user="clickedAlertItem"
          />
        </view>
      </view>

      <!--tab栏-->
      <view
        wx:if="{{showTabview}}"
        @tap="clickedShowTabListView"
        class="alert-mask"
      >
        <tablistview
          :tabs.sync="tabs"
          :selectIndex.sync="selectIndex"
          :defaultBackColor="defaultBackColor_view"
          :defaultTitleColor="defaultTitleColor_view"
          :defaultTitleBold="defaultTitleBold_view"
          :defaultBorderColor="defaultBorderColor_view"
          :selectTitleColor="selectTitleColor_view"
          :selectTitleBold="selectTitleBold_view"
          :selectBorderColor="selectBorderColor_view"
          :selectBackColor="selectBackColor_view"
          @tapEvent.user="clickCurrentTab"
        />
      </view>
    </view>
    <image wx:if="{{showToTop}}"
           @tap="clickedTopButton"
           class="top-button"
           style="width: 55px; height: 55px;"
           src="../../../images/tn-wx-square-back-icon.png"
    />
    <view @tap="clickedCompleteButton" class="complete-button">
      <text class="complete-button-text">添加到空间</text>
    </view>
  </view>
</template>


<script>
  import wepy from 'wepy'
  import TabListView from '../../../components/tab-list-view'
  import TabList from '../../../components/tab-list'
  import test from '../../../utils/test'
  import AlertList from '../../../components/alert-list'
  import ReleaseItem from '../../../components/release-item'
  import { responseRelease } from '../../../mixins/testJson'

  export default class Index extends wepy.page {
    config = {
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTextStyle: 'black',
      navigationBarTitleText: '广场',
      enablePullDownRefresh: true
    }

    components = {
      releaseitem: ReleaseItem,
      tablist: TabList,
      tablistview: TabListView,
      alertlist: AlertList
    }

    computed = {
      getTabViewWidth() {
        return this.$parent.globalData.screenWidth - 54
      }
    }

    data = {
      list: [],
      cityName: '全部城市',
      cityCode: 0,

      showToTop: false,
      screenHeight: 0,

      fromSquare: false,
      cancelFlag: true,
      selectedList: [],

      tabs: [],
      defaultTitleColor: '#666666',
      defaultTitleBold: 'normal',
      selectTitleColor: '#333333',
      selectTitleBold: 'bold',
      indicatorColor: '#ff7733',
      selectIndex: 0,
      selectItem: {},

      showTabview: false,
      defaultBackColor_view: '#FFFFFF',
      defaultTitleColor_view: '#333333',
      defaultTitleBold_view: 'normal',
      defaultBorderColor_view: 'transparent',
      selectBackColor_view: '#FFFCF8',
      selectTitleColor_view: '#FF5500',
      selectTitleBold_view: 'bold',
      selectBorderColor_view: '#FF7733',

      showAlert: false,
      showAlertOffset: 0,
      currentAlertSource: [],
      currentAlertSourceCount: 0,
      currentAlertSelectStyle: false,
      currentSort: 0,
      sortTypes: [
        '默认排序',
        '发布时间排序',
        '热度排序'
      ]
    }

    methods = {
      clickedTopButton() {
        wx.pageScrollTo({
          scrollTop: 0,
          duration: 300
        })
      },
      clickedPostButton() {
        this.$navigate('../../pop/content-post/index', {type: 'square'})
      },
      clickCurrentTab(num, evt) {
        this.selectIndex = num.index
        this.selectItem = num.info
        this.changeTab(num.info.title)
      },
      clickedShowTabListView() {
        this.showTabview = !this.showTabview
      },
      jumpPoiSelect() {
        this.$navigate('../../space/add-destination/index?fromSquare=' + this.fromSquare, {})
      },
      jumpContentSelect() {
        this.$navigate('../../search/content-search/index?fromSquare=' + this.fromSquare, {})
      },
      clickedSortButton(num, evt) {
        this.currentAlertSource = this.sortTypes
        this.currentAlertSelectStyle = true
        this.currentAlertSourceCount = this.sortTypes.length
        this.showAlert = true
        this.showAlertOffset = num.currentTarget.offsetTop + 24
      },
      clickedAlertItem(num, evt) {
        let index = num.index
        this.currentSort = index
      },
      clickedListItem(info) {
        // 心得详情
        if (!info) {
          return
        }
        this.list[info.index].flag = !info.flag
        this.clickedItem(this.list[info.index].originId, info.flag)
      },
      clickedMaskBack() {
        this.showAlert = false
        this.currentAlertSource = []
        this.currentAlertSelectStyle = false
        this.currentAlertSourceCount = 0
      }
    }

    datachange() {
      this.list.forEach((detail, j) => {
        detail.elements.forEach((item, i) => {
          if (item.elementId === 0) {
            detail.elementContent = item.content
          } else if (item.elementId === 1) {
            item.imgs.forEach((value, index) => {
              detail.imageNumber++
              if (detail.imagesList.length < 3) {
                detail.imagesList.push(value.imgUrl)
              } else {
                detail.imagesNumberFlag = true
              }
            })
          }
        })
      })
    }

    onLoad() {
      if (responseRelease.success) {
        this.list = responseRelease.data.list
        this.list.forEach((item, i) => {
          item.flag = true
          item.imageNumber = 0
          item.imagesList = []
          item.elementContent = ''
          item.imagesNumberFlag = false
        })

        this.datachange()
      }
      this.screenHeight = wx.getSystemInfoSync().windowHeight
      this.tabs = test.testTabData
      this.$apply()
    }

    onPullDownRefresh() {
      wx.showNavigationBarLoading()
      setTimeout(function() {
        wx.hideNavigationBarLoading()
        wx.stopPullDownRefresh()
      }, 1500)
    }

    onPageScroll(obj) {
      if (obj.scrollTop > this.screenHeight * 1.5) {
        if (!this.showToTop) {
          this.showToTop = true
          this.$apply()
        }
      } else {
        if (this.showToTop) {
          this.showToTop = false
          this.$apply()
        }
      }
    }

    clickedItem(id, selected) {
      if (selected) {
        this.removeItem(id)
        this.selectedList.push(id)
      } else {
        this.removeItem(id)
      }
    }

    removeItem(id) {
      if (this.selectedList.length <= 0) {
        return
      }
      for (let i = 0; i < this.selectedList.length; i++) {
        if (this.selectedList[i] === id) {
          this.selectedList.splice(i, 1)
          i--
        }
      }
    }

    clickedCompleteButton() {
      let self = this
      var pages = getCurrentPages()
      var beforePage = pages[pages.length - 2] // 前一个页面
      this.$back({
        success: function() {
          beforePage.quoteSpace(self.selectedList)
        }
      })
    }

    changeTab(tabName) {
    }
  }
</script>
